#!/bin/bash

template='"^ "$8" ^ "$9" ^ "$10'
# another template examples: '"^ "$8" ^ "$9" / "$10" ^ "$19'
#                            '"^ "$6'

separator=^
separator0=/
filter=
or_not_pageview=

while getopts ':t:s:f:g:p' opt ; do
    case $opt in
        t) template=$OPTARG ;;
        s) separator=$OPTARG ;;
        f) separator0=$OPTARG ;;
        g) filter=$OPTARG ;;
        p) or_not_pageview='|| $14 != "page view"' ;;
       \?) echo "Invalid option: -$OPTARG" >&2
           exit 1 ;;
        :) echo "Option -$OPTARG requires an argument" >&2
           exit 1 ;;
    esac
done

shift $((OPTIND-1))
[ -n "$1" ] && input="$1" || input=-

function try_filter
{
    local flt=$1
    shift
    if [ -x "$(which "$flt" 2>&1)" ] ; then
        $(which "$flt") "$@"
    else
        cat
    fi
}

function main
{
    awk -F'","' "NR < 2 $or_not_pageview {next} `
            `{\$0 = substr(\$0, 2, length(\$0) - 2); print $template}" "$1" |
    sort -f | uniq -ci | sort -nrs | column -t -s"$separator" -o'|' |
    try_filter hl -215 -b '^\s*\d+' -155 '\|' -225 "\s+(?:\\$separator0\s+)+"
}

if [ -n "$filter" ] ; then
    sed 1d "$input" | eval "$filter" | sed 1i. | main -
else
    main "$input"
fi

